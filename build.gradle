buildscript {
	ext {
		springBootVersion = '1.5.8.RELEASE'
		springCloudVersion = 'Dalston.RELEASE'
		jerseyVersion = '2.25.1'
		swaggerJerseyVersion = '1.5.3'
		jsonPath = '2.1.0'
		jerseySecurityVersion = '2.17'
		guavaVersion = '19.0'
		springContextSupport = '4.2.6.RELEASE'
	}
	repositories {
		mavenCentral()
		maven { url "https://plugins.gradle.org/m2/" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management' 

jar {
	baseName = 'sample'
	version = '0.0.1-SNAPSHOT'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
	maven { url "https://plugins.gradle.org/m2/" }
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'    
    resolutionStrategy.dependencySubstitution {
    	// Substitute one module dependency for another
    	//jersey 2.22.1 is being replaced by 2.23.1 a we want to use LoggingFeature 
    	substitute module("org.glassfish.jersey.containers:jersey-container-servlet-core:2.22.1") with module("org.glassfish.jersey.containers:jersey-container-servlet-core:${jerseyVersion}")
    	substitute module("org.glassfish.jersey.containers:jersey-container-servlet:2.22.1") with module("org.glassfish.jersey.containers:jersey-container-servlet:${jerseyVersion}")
  } 
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	compile("org.springframework.boot:spring-boot-starter-actuator")
	compile("org.springframework.boot:spring-boot-starter-security")
	testCompile('org.springframework.boot:spring-boot-starter-test')	
	compile("org.springframework.boot:spring-boot-starter-jersey")
	compile("com.netflix.archaius:archaius-core:0.7.4")		
	compile("org.apache.httpcomponents:httpclient:4.5.2")
	compile("org.apache.httpcomponents:httpcore:4.4.4")
	compile("com.jayway.jsonpath:json-path:${jsonPath}")
	compile("com.google.guava:guava:${guavaVersion}")	
}

tasks.withType(org.springframework.boot.gradle.run.BootRunTask) {
	systemProperties = System.properties
}

eclipse {
	classpath {
		containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.10'
}
